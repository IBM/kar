#
# Copyright IBM Corporation 2020,2021
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: kar-zookeeper
  labels:
    {{- include "kar.labels" . | nindent 4 }}
    name: kar-zookeeper
spec:
  type: ClusterIP
  clusterIP: None
  selector:
      {{- include "kar.selectorLabels" . | nindent 6 }}
      name: kar-zookeeper
  ports:
  - name: zookeeper
    port: {{ .Values.zk.port }}
    targetPort: {{ .Values.zk.port }}
  - name: server
    port: {{ .Values.zk.serverPort }}
    targetPort: {{ .Values.zk.serverPort }}
  - name: leader-election
    port: {{ .Values.zk.leaderElectionPort }}
    targetPort: {{ .Values.zk.leaderElectionPort }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kar-zookeeper
  labels:
    {{- include "kar.labels" . | nindent 4 }}
    name: kar-zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "kar.selectorLabels" . | nindent 6 }}
      name: kar-zookeeper
  serviceName: kar-zookeeper
  template:
    metadata:
      labels:
        {{- include "kar.selectorLabels" . | nindent 8 }}
        name: kar-zookeeper
    spec:
{{- if .Values.global.openshift }}
      serviceAccountName: sa-with-anyuid
{{- end }}
      containers:
      - name: zk
        image: {{ .Values.zk.imageRegistry }}/{{ .Values.zk.imageName }}:{{ .Values.zk.imageTag }}
        ports:
        - name: zookeeper
          containerPort: {{ .Values.zk.port }}
        - name: server
          containerPort: {{ .Values.zk.serverPort }}
        - name: leader-election
          containerPort: {{ .Values.zk.leaderElectionPort }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.zk.port }}
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "echo ruok | nc -w 1 localhost {{ .Values.zk.port }} | grep imok"
        env:
        - name: ZOO_4LW_COMMANDS_WHITELIST
          value: "srvr,ruok"
